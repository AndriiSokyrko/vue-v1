="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript plain">{</code></div><div class="line number2 index1 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"users"</code><code class="javascript plain">: [{</code></div><div class="line number3 index2 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"id"</code><code class="javascript plain">: 1,</code></div><div class="line number4 index3 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"name"</code><code class="javascript plain">: </code><code class="javascript string">"roy"</code><code class="javascript plain">,</code></div><div class="line number5 index4 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"location"</code><code class="javascript plain">: </code><code class="javascript string">"india"</code></div><div class="line number6 index5 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}, {</code></div><div class="line number7 index6 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"id"</code><code class="javascript plain">: 2,</code></div><div class="line number8 index7 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"name"</code><code class="javascript plain">: </code><code class="javascript string">"sam"</code><code class="javascript plain">,</code></div><div class="line number9 index8 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"location"</code><code class="javascript plain">: </code><code class="javascript string">"wales"</code></div><div class="line number10 index9 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}]</code></div><div class="line number11 index10 alt2"><code class="javascript plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Запускаем сервер через командную строку, указывая файл <code class="inline">info.json</code> в качестве источника данных REST API, доступных по адресу <a href="http://localhost:3000/">http://localhost:3000</a>. </p>
<div><div id="highlighter_503399" class="syntaxhighlighter  bash"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="bash plain">json-server info.json</code></div></div></td></tr></tbody></table></div></div>
<h2 class="nolinks">Тестирование точек входа REST API</h2>
<p>Теперь когда фейковый REST API сервер запущен давайте посмотрим как осуществить запрос, используя HTTP клиент. Для создания запросов к API я воспользуюсь инструментом Postman. </p>
<h3 class="nolinks">Запросы типа GET</h3>
<p>Давайте начнём с создания <code class="inline">GET</code> запроса к REST URL. В созданном нами JSON файле мы определили точку входа под названием <code class="inline">users</code>, в которой соответственно хранится информация о пользователях.&nbsp; В результате выполнения <code class="inline">GET</code> запроса к URL <a href="http://localhost:3000/users">http://localhost:3000/users</a> мы должны получить список существующих данных.</p>
<div><div id="highlighter_768208" class="syntaxhighlighter  javascript"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript plain">[</code></div><div class="line number2 index1 alt1"><code class="javascript spaces">&nbsp;&nbsp;</code><code class="javascript plain">{</code></div><div class="line number3 index2 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"id"</code><code class="javascript plain">: 1,</code></div><div class="line number4 index3 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"name"</code><code class="javascript plain">: </code><code class="javascript string">"roy"</code><code class="javascript plain">,</code></div><div class="line number5 index4 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"location"</code><code class="javascript plain">: </code><code class="javascript string">"india"</code></div><div class="line number6 index5 alt1"><code class="javascript spaces">&nbsp;&nbsp;</code><code class="javascript plain">},</code></div><div class="line number7 index6 alt2"><code class="javascript spaces">&nbsp;&nbsp;</code><code class="javascript plain">{</code></div><div class="line number8 index7 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"id"</code><code class="javascript plain">: 2,</code></div><div class="line number9 index8 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"name"</code><code class="javascript plain">: </code><code class="javascript string">"sam"</code><code class="javascript plain">,</code></div><div class="line number10 index9 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"location"</code><code class="javascript plain">: </code><code class="javascript string">"wales"</code></div><div class="line number11 index10 alt2"><code class="javascript spaces">&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number12 index11 alt1"><code class="javascript plain">]</code></div></div></td></tr></tbody></table></div></div>
<h3 class="nolinks">Запросы типа POST<br>
</h3>
<p>Для того чтобы добавить новые данные к уже существующим необходимо совершить <code class="inline">POST</code> запрос к URL <a href="http://localhost:3000/users">http://localhost:3000/users</a>. <code class="inline">POST</code> запрос должен выглядеть следующим образом:</p>
<figure class="post_image"><img alt="POST Request" data-src="https://cms-assets.tutsplus.com/uploads/users/1469/posts/27871/image/post.png"></figure><p>После повторного выполнения <code class="inline">GET</code> запроса вы должны увидеть новые данные, которые были добавлены в файл <code class="inline">info.json</code>.</p>
<div><div id="highlighter_754000" class="syntaxhighlighter  javascript"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript plain">[</code></div><div class="line number2 index1 alt1"><code class="javascript spaces">&nbsp;&nbsp;</code><code class="javascript plain">{</code></div><div class="line number3 index2 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"id"</code><code class="javascript plain">: 1,</code></div><div class="line number4 index3 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"name"</code><code class="javascript plain">: </code><code class="javascript string">"roy"</code><code class="javascript plain">,</code></div><div class="line number5 index4 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"location"</code><code class="javascript plain">: </code><code class="javascript string">"india"</code></div><div class="line number6 index5 alt1"><code class="javascript spaces">&nbsp;&nbsp;</code><code class="javascript plain">},</code></div><div class="line number7 index6 alt2"><code class="javascript spaces">&nbsp;&nbsp;</code><code class="javascript plain">{</code></div><div class="line number8 index7 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"id"</code><code class="javascript plain">: 2,</code></div><div class="line number9 index8 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"name"</code><code class="javascript plain">: </code><code class="javascript string">"sam"</code><code class="javascript plain">,</code></div><div class="line number10 index9 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"location"</code><code class="javascript plain">: </code><code class="javascript string">"wales"</code></div><div class="line number11 index10 alt2"><code class="javascript spaces">&nbsp;&nbsp;</code><code class="javascript plain">},</code></div><div class="line number12 index11 alt1"><code class="javascript spaces">&nbsp;&nbsp;</code><code class="javascript plain">{</code></div><div class="line number13 index12 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"name"</code><code class="javascript plain">: </code><code class="javascript string">"ii"</code><code class="javascript plain">,</code></div><div class="line number14 index13 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"location"</code><code class="javascript plain">: </code><code class="javascript string">"la"</code><code class="javascript plain">,</code></div><div class="line number15 index14 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"id"</code><code class="javascript plain">: 7</code></div><div class="line number16 index15 alt1"><code class="javascript spaces">&nbsp;&nbsp;</code><code class="javascript plain">},</code></div><div class="line number17 index16 alt2"><code class="javascript spaces">&nbsp;&nbsp;</code><code class="javascript plain">{</code></div><div class="line number18 index17 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"name"</code><code class="javascript plain">: </code><code class="javascript string">"Shona"</code><code class="javascript plain">,</code></div><div class="line number19 index18 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"location"</code><code class="javascript plain">: </code><code class="javascript string">"LA"</code><code class="javascript plain">,</code></div><div class="line number20 index19 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"id"</code><code class="javascript plain">: 8</code></div><div class="line number21 index20 alt2"><code class="javascript spaces">&nbsp;&nbsp;</code><code class="javascript plain">},</code></div><div class="line number22 index21 alt1"><code class="javascript spaces">&nbsp;&nbsp;</code><code class="javascript plain">{</code></div><div class="line number23 index22 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"name"</code><code class="javascript plain">: </code><code class="javascript string">"Shona"</code><code class="javascript plain">,</code></div><div class="line number24 index23 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"location"</code><code class="javascript plain">: </code><code class="javascript string">"LA"</code><code class="javascript plain">,</code></div><div class="line number25 index24 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript string">"id"</code><code class="javascript plain">: 9</code></div><div class="line number26 index25 alt1"><code class="javascript spaces">&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number27 index26 alt2"><code class="javascript plain">]</code></div></div></td></tr></tbody></table></div></div>
<h3 class="nolinks">Запросы типа DELETE</h3>
<p>Для удаления данных из <code class="inline">json-server</code>, вам необходимо отправить <code class="inline">DELETE</code> запрос к соответствующей точке входа и передать идентификатор пользователя.&nbsp; К примеру, чтобы удалить пользователя с Id 1, вам необходимо отправить <code class="inline">DELETE</code> запрос по адресу <a href="http://localhost:3000/users/1">http://localhost:3000/users/1</a>. Чтобы убедиться что пользователь был удалён выполните <code class="inline">GET</code> запрос.</p>
<h3 class="nolinks">Запрос типа PATCH</h3>
<p>Для того чтобы обновить уже существующую запись необходимо отправить <code class="inline">PATCH</code> запрос с указанием новых значений для уже существующей записи. К примеру, чтобы обновить пользователя с Id 2, отправьте <code class="inline">PATCH</code> запрос по адресу <a href="http://localhost:3000/users/2">http://localhost:3000/users/2</a>: </p>
<figure class="post_image"><img alt="Patch Request " data-src="https://cms-assets.tutsplus.com/uploads/users/1469/posts/27871/image/patch.png"></figure><h2 class="nolinks">Организация поиска в json-server REST API</h2>
<p><code class="inline">json-server</code> REST API позволяет вам осуществить поиск данных, по определённым критериям. К примеру, чтобы найти всех пользователей по имени необходимо отправить GET запрос к REST API URL как это показано ниже:</p>
<figure class="post_image"><img alt="Sending a GET request to the REST API URL " data-src="https://cms-assets.tutsplus.com/uploads/users/1469/posts/27871/image/filter.png"></figure><p>Согласно изображению представленном выше, отправка GET запроса к URL <a href="http://localhost:3000/users?name=Shona">http://localhost:3000/users?name=Shona</a> вернёт всех пользователей с именем <code class="inline">Shona</code>. Чтобы искать и по другим критериям необходимо добавить новые поля в строку запроса.</p>
<p>Для того чтобы осуществить полнотекстовый поиск по точке входа REST API, можете воспользоваться параметром <code class="inline">q</code>. К примеру, чтобы найти всех пользователей в информации о которых присутствует строка <code class="inline">s</code>, необходимо выполнить следующий запрос:</p>
<figure class="post_image"><img alt="Full Text Search in json-server REST API" data-src="https://cms-assets.tutsplus.com/uploads/users/1469/posts/27871/image/search.png"></figure><h2 class="nolinks">Работа с постраничным разбиением результатов</h2>
<p>В случае работы с большим объёмом данных вам придётся столкнуться с информацией, распределённой по множеству страниц. <code class="inline">json-server</code> справится и с этой задачей, разбив JSON данные на множество частей.&nbsp; По умолчанию на одной странице&nbsp;<code class="inline">json-server</code>-а выводится порядка десяти записей. Данное значение можно подправить, используя параметр <code class="inline">_limit</code>. </p>
<div><div id="highlighter_859721" class="syntaxhighlighter  bash"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="bash plain">http:</code><code class="bash plain">//localhost</code><code class="bash plain">:3000</code><code class="bash plain">/users</code><code class="bash plain">?_limit=5</code></div></div></td></tr></tbody></table></div></div>
<p>В результате выполнения GET запроса будет возвращено пять записей. Для того чтобы передвигать по страницам воспользуемся параметром <code class="inline">_page</code>. В <code class="inline">_page</code> необходимо указать номер страницы данные которой необходимо извлечь.</p>
<div><div id="highlighter_652281" class="syntaxhighlighter  bash"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="bash plain">http:</code><code class="bash plain">//localhost</code><code class="bash plain">:3000</code><code class="bash plain">/users</code><code class="bash plain">?_limit=5&amp;_page=2</code></div></div></td></tr></tbody></table></div></div>
<p>В результате выполнения GET запроса представленного выше, будет выведен список из пяти пользователей со второй страницы. Изменение параметра <code class="inline">_page</code> позволит нам получить данные с нужной страницы. </p>
<h2 class="nolinks">Сортировка результата</h2>
<p>Также <code class="inline">json-server</code> позволяет осуществить сортировку результата. Для этого необходимо указать нужное поле и направление.&nbsp; По умолчанию данные сортируются в возрастающем порядке. Название сортируемой колонки необходимо указать в параметре <code class="inline">_sort</code>, а направление задать через ключевое слово <code class="inline">_order</code>. Пример подобного URL:</p>
<div><div id="highlighter_716599" class="syntaxhighlighter  bash"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="bash plain">http:</code><code class="bash plain">//localhost</code><code class="bash plain">:3000</code><code class="bash plain">/users</code><code class="bash plain">?_sort=</code><code class="bash functions">id</code><code class="bash plain">&amp;_order=DESC</code></div></div></td></tr></tbody></table></div></div>
<p>В этом примере сортировка будет осуществлена по колонке <code class="inline">Id</code>, в обратном порядке.</p>
<h2 class="nolinks">Работа с операторами</h2>
<p>Вдобавок ко всему выше сказанному, <code class="inline">json-server</code> поддерживает работу с операторами, с помощью которых можно осуществить поиск по Id в определённом диапазоне или по регулярному выражению. </p>
<p>Для поиска записей в определённом диапазоне значений необходимо воспользоваться параметрами <code class="inline">_gte</code> и <code class="inline">_lte</code>. К примеру, чтобы найти пользователей чьи идентификаторы равны от 1 до 2, необходимо совершить GET запрос по URL <a href="http://localhost:3000/users?id_gte=1&amp;id_lte=2">http://localhost:3000/users?id_gte=1&amp;id_lte=2</a>:</p>
<figure class="post_image"><img alt="Handling Less Than Greater Than Operators" data-src="https://cms-assets.tutsplus.com/uploads/users/1469/posts/27871/image/ggt.png" class="loaded" src="./Создание фейкового REST API с помощью json-server-а_files/ggt.png" data-was-processed="true"></figure><p>Для поиска имён, начинающихся с определённой буквы необходимо воспользоваться регулярным выражением. К примеру, чтобы найти пользователей чьи имена содержат последовательность букв <code class="inline">sa</code>, воспользуемся оператором <code class="inline">_like</code>, который припишем к URL и отправим через <code class="inline">GET</code> запрос <a href="http://localhost:3000/users?name_like=%5Esa">http://localhost:3000/users?name_like=^sa</a>.</p>
<figure class="post_image"><img alt="Handling Regular Expressions In Operators" data-src="https://cms-assets.tutsplus.com/uploads/users/1469/posts/27871/image/sam.png" class="loaded" src="./Создание фейкового REST API с помощью json-server-а_files/sam.png" data-was-processed="true"></figure><h2 class="nolinks">Заключение</h2>
<p>В этом уроке мы рассмотрели основы работы с <code class="inline">json-server</code> REST API для создания тестовой базы данных. Вы научились устанавливать <code class="inline">json-server</code> и взаимодействовать с URL для добавления, обновления, изменения и удаления данных. Также вы увидели как осуществить поиск по записям, используя операторы и регулярные выражения.</p>
<p>Доводилось ли вам пользоваться <code class="inline">json-server</code>-ом или каким-либо другим инструментом для генерации фейковых REST API? Есть подобный опыт? Вы всегда можете рассказать об этом в комментариях, расположенных ниже.</p></div></div></div><div class="avert fuse-ad"><div class="avert__wrapper"><div class="avert__content"><div data-fuse="21764354928" data-fuse-code="fuse-slot-21764354928-1" data-fuse-slot="/71161633/ENV_envato/article_mid_2"><div id="fuse-slot-21764354928-1" class="fuse-slot"></div></div></div><div class="avert__label">Advertisement</div></div></div><div class="content-author"><a href="https://tutsplus.com/authors/roy-agasthyan"><div class="content-author__header"><img data-src="//www.gravatar.com/avatar/f7a05f12793787324072b0b03728fda4?s=200&amp;d=https%3A%2F%2Fassets.tutsplus.com%2Fimages%2Fhub%2Favatar_default.png&amp;r=PG" alt="Roy Agasthyan" class="content-author__image" src="https://code.tutsplus.com/ru/tutorials/fake-rest-api-up-and-running-using-json-server--cms-27871"><div class="content-author__name">Roy Agasthyan</div><div class="content-author__title"></div></div><div class="content-author__bio">I'm a software engineer by profession and love to write tutorials and educational stuff.</div></a></div></div><div class="layout__sidebar"><ul class="social-links"><li class="social-links__item social-links__item--feed"><a class="social-links__link social-links__link--feed" href="https://code.tutsplus.com/ru/categories/json.atom"><i class="icon fa fa-rss social-links__icon"></i>Feed </a>